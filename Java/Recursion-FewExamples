package recursion;

import java.util.Scanner;

public class RecursionFewExamples {
  static int step =0;
	public static void main(String[] args) {
		
	Scanner sc = new Scanner(System.in);
	System.out.println("Enter n : ");
	int n = sc.nextInt();
	
	//Sum of 1 to n natural numbers
	System.out.println(sum(n));
	
	//Fcatorial of n
	System.out.println(factorial(n));
	
	System.out.println("Enter power : ");
	int x = sc.nextInt();
	
	//Power of n^x
     System.out.println(power(n,x));
    
     //calculates power faster than above solution in less calls
     System.out.println(fastPower(n,x));
     

     
	}



public static int sum(int n) {
	if(n==1) {
		return 1;
	}
	return n+ sum(n-1);
}
public static int factorial(int n) {
	if(n==1) {
		return n;
	}
	return n *factorial(n-1);
}

public static int power(int m, int n) {
	step++;
	if(n==0) return 1;
	return m* power(m,n-1);
}

public static long fastPower(long m,long n) {
	step++;
	int mod=12;;
	if(n==0) return 1;
	if(n%2==0) { 
		return fastPower(m*m,n/2);
	}
	return m * fastPower(m,n-1);
}
}
